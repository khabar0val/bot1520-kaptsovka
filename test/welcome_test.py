from sqlighter import SQLighter
from loguru import logger
import telebot

TOKEN = None
with open("token.txt") as T:
	TOKEN = T.read().strip()

bot = telebot.TeleBot(TOKEN)
db1520 = SQLighter('db1520.db')

@bot.message_handler(commands=['start'])
def welcome2(message):
    try:
        # keyboard
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("üëÄ –û —à–∫–æ–ª–µ")
        item2 = types.KeyboardButton("üßë‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        item3 = types.KeyboardButton("üêµ –ü–æ–≥–æ–≤–æ—Ä–∏–º?")
        item4 = types.KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å...")
     
        markup.add(item1, item2, item3, item4)
     
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —à–∫–æ–ª–µ".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)

        if(not db1520.subscriber_exists(message.from_user.id)):
            # –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π (–∑–∞–ø–æ–º–∏–Ω–∞–µ–º)
            db1520.add_subscriber(message.from_user.id, False)

        while True:
            subscriptions = db1520.get_subscriptions()

            bot.send_message(message.from_user.id, 'https://www.instagram.com/kaptsovka/?hl=ru\n{0.first_name}, –∑–∞–≥–ª—è–Ω–∏ –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º –ö–∞–ø—Ü–æ–≤–∫–∏.\n–í–æ–∑–º–æ–∂–Ω–æ —Ç–∞–º –ø–æ—è–≤–∏–ª–æ—Å—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!'.format(message.from_user, bot.get_me()),
            parse_mode='html')

            bot.send_message(message.from_user.id, 'https://www.instagram.com/kaptsovschool/\n{0.first_name}, –∑–∞–≥–ª—è–Ω–∏ –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º –®–∫–æ–ª—ã 1520 –∏–º. –ö–∞–ø—Ü–æ–≤—ã—Ö.\n–í–æ–∑–º–æ–∂–Ω–æ —Ç–∞–º –ø–æ—è–≤–∏–ª–æ—Å—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!'.format(message.from_user, bot.get_me()),
            parse_mode='html')

            time.sleep(172800)

    except:
        logger.warning("WARNING with welcome2")
        logger.error("ERROR with welcome2")
        logger.critical("CRITICAL with welcome2")